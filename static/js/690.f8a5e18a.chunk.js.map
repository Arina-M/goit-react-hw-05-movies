{"version":3,"file":"static/js/690.f8a5e18a.chunk.js","mappings":"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","sources":["Services/Services.jsx","components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx"],"sourcesContent":["import axios from \"axios\";\n\nconst KEY = '46ee399c81006beac7a91a0ab15f7750';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const fetchTrendingMovies = async (signal) => {\n    const response = await axios.get('trending/movie/day', {\n        signal,\n        params: {\n            api_key: KEY,\n            language: 'en-US'\n        }\n    });\n    \n    return response.data.results;\n};\n\nexport const fetchMovies = async ({ nameMovies, signal }) => {\n    const response = await axios.get('search/movie', {\n        signal,\n        params: {\n            api_key: KEY,\n            query: nameMovies,\n        }\n    });\n\n    return response.data.results;\n}\n\nexport const fetchMovieDetails = async ({ movieId, signal }) => {\n    const response = await axios.get(`movie/${movieId}`, {\n        signal,\n        params: { \n            api_key: KEY,\n            language: 'en-US' \n        }\n    })\n\n    return response.data;\n}\n\nexport const fetchCast = async ({ movieId, signal }) => {\n    const response = await axios.get(`movie/${movieId}/credits`, {\n        signal,\n        params: {\n            api_key: KEY,\n            language: 'en-US'\n        }\n    })\n\n    return response.data.cast;\n}\n\nexport const fetchReviews = async ({ movieId, signal }) => {\n    const response = await axios.get(`movie/${movieId}/reviews`, {\n        signal,\n        params: {\n            api_key: KEY,\n            language: 'en-US' \n        }\n    });\n\n    return response.data.results;\n}","import styled from '@emotion/styled';\n\nexport const CastList = styled.ul`\n    display: flex;\n    flex-wrap: wrap;\n    max-width: calc(100vw - 48px);\n    gap: 24px;\n    margin: 0, auto;\n    margin-bottom: 20px;\n    padding: 0;\n    list-style: none;\n`;\n\nexport const CastItem = styled.li`\n    margin-left: auto;\n    margin-right: auto;\n    max-width: 170px;\n\n    &:not(:last-child) {\n        margin-bottom: 72px;\n    }\n\n    @media screen and (min-width: 768px) {\n        margin-bottom: 0;\n        margin-left: 0;\n        margin-right: 0;\n        flex-basis: calc((100% - 2*24px) / 3);\n        &:not(:last-child) {\n            margin-bottom: 0;\n        }\n    }\n\n    @media screen and (min-width: 1200px) {\n        margin-right: 0;\n        margin-bottom: 0;\n        flex-basis: calc((100% - 4*24px) / 5);\n\n    }\n`;\n\nexport const DetailsBox = styled.div`\n    display: block;\n    text-align: center;\n    padding-top: 32px;\n    padding-bottom: 32px;\n    width: 170px;\n    box-shadow: 0px 1px 6px rgba(46, 47, 66, 0.08), 0px 1px 1px rgba(46, 47, 66, 0.16), 0px 2px 1px rgba(46, 47, 66, 0.08);\n    border-radius: 0px 0px 4px 4px;\n    background-color: #f1e7bf;\n`;\n\nexport const NameActor = styled.h3`\n    margin-bottom: 8px;\n    font-weight: 700;\n    font-size: 20px;\n    line-height: 1.2;\n    letter-spacing: 0.02em;\n    color: #b31bb4;\n`;\n\nexport const Role = styled.h4`\n    margin-bottom: 8px;\n    font-weight: 500;\n    font-size: 18px;\n    line-height: 1.2;\n    letter-spacing: 0.02em;\n    color: #b31bb4;\n`;\n\nexport const Popular = styled.p`\n    margin-bottom: 8px;\n    font-weight: 400;\n    font-size: 16px;\n    line-height: 1.2;\n    letter-spacing: 0.02em;\n    color: #b31bb4;\n`;","import Loader from \"components/Loader\";\nimport { useEffect, useState, useRef } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { fetchCast } from \"Services/Services\";\nimport placeholderImage from \"../../imgPlaceholder/1647644742_22-amiel-club-p-siluet-cheloveka-kartinki-24.png\";\nimport { CastList, DetailsBox, NameActor, Popular, Role } from \"./Cast.styled\";\n\n\nconst Cast = () => {\n    const [cast, setCast] = useState(null);\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(null);\n    const { movieId } = useParams();\n    const abortController = useRef();\n\n    useEffect(() => {\n        const getCastDetails = async () => {\n            try {\n                if(abortController.current){\n                    abortController.current.abort();\n                }\n\n                abortController.current = new AbortController();\n\n                setLoading(true);\n                setError(null);\n\n                const castDetails = await fetchCast({\n                    movieId: movieId,\n                    signal: abortController.current.signal\n                });\n\n                setCast(castDetails);\n                setError(null);\n            } catch (error) {\n                if (error.code !== 'ERR_CANCELED') {\n                    setError(\"Sorry, an error occurred :( Try reloading the page!\");\n                    setLoading(false);\n                }\n            } finally {\n                setLoading(false);\n            } \n        };\n        getCastDetails();\n    }, [movieId]);\n\n\n\n    return (\n        <div>\n            {loading && <Loader />}\n            {cast && <CastList>\n                        {cast.map(({ id, name, character, original_name, profile_path, popularity }) => (\n                            <li key={id}>\n                                <img src={profile_path ? `https://image.tmdb.org/t/p/w500${profile_path}` : placeholderImage} alt={name} width={170}/>\n                                <DetailsBox>\n                                    <NameActor>{original_name}</NameActor>\n                                    <Role>Role: {character}</Role>\n                                    <Popular>Actor's popularity: {popularity}</Popular>\n                                </DetailsBox>\n                            </li>\n                        ))}\n                    </CastList>}\n            {error && <div>{error.message}</div> }\n        </div>\n    )\n}\n\nexport default Cast;"],"names":["KEY","axios","fetchTrendingMovies","signal","params","api_key","language","response","data","results","fetchMovies","nameMovies","query","fetchMovieDetails","movieId","fetchCast","cast","fetchReviews","CastList","styled","DetailsBox","NameActor","Role","Popular","useState","setCast","loading","setLoading","error","setError","useParams","abortController","useRef","useEffect","getCastDetails","current","abort","AbortController","castDetails","code","Loader","map","id","name","character","original_name","profile_path","popularity","src","placeholderImage","alt","width","message"],"sourceRoot":""}